#include <conio.h>

unsigned const char y = 5, x = 10;  // y - строки, x - столбцы
unsigned char byfer[y][x], ehbyf[y][x], bgr = '*';
unsigned char textcolr[y][x], textbgr[y][x];
unsigned char ehtextcolr[y][x], ehtextbgr[y][x]; // буферы для отслеживания цвета

// Очистка или запись всего буфера с цветным фоном и текстом
void clrbyfer() {
    for (signed char iy = 0; iy < y; iy++) {
        for (signed char ix = 0; ix < x; ix++) {
            textbgr[iy][ix] = 1;      // фон — синий
            textcolr[iy][ix] = 15;    // текст — белый
            byfer[iy][ix] = bgr;      // символ — '*'

            // Сброс бэкапов
            ehbyf[iy][ix] = byfer[iy][ix];
            ehtextcolr[iy][ix] = textcolr[iy][ix];
            ehtextbgr[iy][ix] = textbgr[iy][ix];
        }
    }
}

// Вывод всего буфера на экран
void prntbyfer() {
    _setcursortype(0); // убрать курсор
    for (signed char iy = 0; iy < y; iy++) {
        for (signed char ix = 0; ix < x; ix++) {
            textbackground(textbgr[iy][ix]);
            textcolor(textcolr[iy][ix]);
            gotoxy(1 + ix, 1 + iy);
            cprintf("%c", byfer[iy][ix]);
        }
    }
}

// Обновление на экране только тех ячеек, что изменились
void uptbyfer() {
    _setcursortype(0); // убрать курсор
    for (signed char iy = 0; iy < y; iy++) {
        for (signed char ix = 0; ix < x; ix++) {
            if (
                byfer[iy][ix] != ehbyf[iy][ix] ||
                textcolr[iy][ix] != ehtextcolr[iy][ix] ||
                textbgr[iy][ix] != ehtextbgr[iy][ix]
            ) {
                // Сохраняем новое состояние
                ehbyf[iy][ix] = byfer[iy][ix];
                ehtextcolr[iy][ix] = textcolr[iy][ix];
                ehtextbgr[iy][ix] = textbgr[iy][ix];

                textbackground(textbgr[iy][ix]);
                textcolor(textcolr[iy][ix]);
                gotoxy(1 + ix, 1 + iy);
                cprintf("%c", byfer[iy][ix]);
            }
        }
    }
}

void main() {
    clrscr();

    clrbyfer();
    prntbyfer();

    getch();

    byfer[2][2] = '#';
    uptbyfer();

    getch();

    textcolr[3][3] = 2;     // зелёный
    byfer[3][3] = '*';
    uptbyfer();

    getch();

    byfer[3][3] = 32;       // пробел
    uptbyfer();

    getch();
}
